{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/aws_screens/Home.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport logo from \"../assets/zl_logo.png\";\nimport route_icon from \"../assets/runner.png\";\nimport profile_head from \"../assets/profilehead.png\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Auth } from 'aws-amplify';\nimport Landing from \"../landing.js\";\nvar Root = createStackNavigator();\n\nvar RouteScreen = function RouteScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    source: route_icon,\n    style: {\n      width: 205,\n      height: 159\n    }\n  }), React.createElement(Text, null, \"This is where the route generator will go!\"));\n};\n\nvar RunHistScreen = function RunHistScreen(_ref2) {\n  var navigation = _ref2.navigation,\n      route = _ref2.route;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    source: profile_head,\n    style: {\n      width: 205,\n      height: 159\n    }\n  }), React.createElement(Text, null, \"This is where the users past runs will go (and access profile settings)!\"));\n};\n\nvar Tab = createBottomTabNavigator();\nexport default function Home(_ref3) {\n  var _this2 = this;\n\n  var updateAuthState = _ref3.updateAuthState,\n      navigation = _ref3.navigation;\n\n  function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.signOut());\n\n          case 3:\n            updateAuthState('loggedOut');\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Error signing out: ', _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }\n\n  return React.createElement(NavigationContainer, {\n    independent: true\n  }, React.createElement(View, {\n    style: styles.Button\n  }, React.createElement(Button, {\n    title: \"Sign Out\",\n    color: \"black\",\n    onPress: signOut\n  })), React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref4) {\n      var route = _ref4.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var focused = _ref5.focused,\n              color = _ref5.color,\n              size = _ref5.size;\n          var iconName;\n\n          if (route.name === 'Route Generator') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Run History') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Route Generator\",\n    component: RouteScreen\n  }), React.createElement(Tab.Screen, {\n    name: \"Run History\",\n    component: RunHistScreen\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  Button: {\n    backgroundColor: '#FFFFFF',\n    borderColor: '#FFFFFF',\n    borderWidth: 5,\n    borderRadius: 8\n  },\n  Tabs: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/aws_screens/Home.js"],"names":["React","logo","route_icon","profile_head","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","Auth","Landing","Root","RouteScreen","navigation","route","flex","justifyContent","alignItems","width","height","RunHistScreen","Tab","Home","updateAuthState","signOut","console","log","styles","Button","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","StyleSheet","create","container","backgroundColor","borderColor","borderWidth","borderRadius","Tabs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Button, Image, Dimensions } from 'react-native';\nimport logo from '../assets/zl_logo.png';\nimport route_icon from '../assets/runner.png';\nimport profile_head from '../assets/profilehead.png';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\n// import { createDrawerNavigator } from '@react-navigation/drawer';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport { Auth } from 'aws-amplify';\n\nimport Landing from '../landing.js'\nconst Root = createStackNavigator()\n\n\nconst RouteScreen = ({ navigation, route }) => (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Image source={route_icon} style={{ width: 205, height: 159 }}/>\n        <Text>This is where the route generator will go!</Text>\n      </View>\n)\n\nconst RunHistScreen = ({ navigation, route }) => (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Image source={profile_head} style={{ width: 205, height: 159 }}/>\n        <Text>This is where the users past runs will go (and access profile settings)!</Text>\n      </View>\n)\n\nconst Tab = createBottomTabNavigator();\n\n\nexport default function Home({ updateAuthState, navigation }) {\n  async function signOut() {\n    try {\n      await Auth.signOut();\n      updateAuthState('loggedOut');\n    } catch (error) {\n      console.log('Error signing out: ', error);\n    }\n  }\n  return (\n    <NavigationContainer independent={true}>\n    <View style = {styles.Button}>\n    <Button title=\"Sign Out\" color=\"black\" onPress={signOut} />\n    </View>\n    <Tab.Navigator\n    screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            if (route.name === 'Route Generator') {\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n            } else if (route.name === 'Run History') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}\n      >\n\n    <Tab.Screen name=\"Route Generator\" component={RouteScreen}/>\n    <Tab.Screen name=\"Run History\" component={RunHistScreen} />\n    </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  Button:{\n    backgroundColor: '#FFFFFF',\n    borderColor: '#FFFFFF',\n    borderWidth: 5,\n    borderRadius: 8,\n  },\n  Tabs:{\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n\n  }\n});\n"]},"metadata":{},"sourceType":"module"}