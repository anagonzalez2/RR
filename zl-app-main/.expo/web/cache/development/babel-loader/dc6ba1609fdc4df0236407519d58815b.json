{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/aws_screens/SignUp.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Auth } from 'aws-amplify';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport AppTextInput from \"../AppTextInput\";\nimport AppButton from \"../AppButton\";\nexport default function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  function signUp() {\n    return _regeneratorRuntime.async(function signUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.signUp({\n              username: username,\n              password: password,\n              attributes: {\n                email: email\n              }\n            }));\n\n          case 3:\n            console.log('<img draggable=\"false\" class=\"emoji\" alt=\"✅\" src=\"https://s.w.org/images/core/emoji/11/svg/2705.svg\"> Sign-up Confirmed');\n            navigation.navigate('ConfirmSignUp');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('<img draggable=\"false\" class=\"emoji\" alt=\"❌\" src=\"https://s.w.org/images/core/emoji/11/svg/274c.svg\"> Error signing up...', _context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.safeAreaContainer\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Create a new account\"), React.createElement(AppTextInput, {\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    leftIcon: \"account\",\n    placeholder: \"Enter username\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\"\n  }), React.createElement(AppTextInput, {\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\"\n  }), React.createElement(AppTextInput, {\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    leftIcon: \"email\",\n    placeholder: \"Enter email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\"\n  }), React.createElement(AppButton, {\n    title: \"Sign Up\",\n    onPress: signUp\n  }), React.createElement(View, {\n    style: styles.footerButtonContainer\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignIn');\n    }\n  }, React.createElement(Text, {\n    style: styles.forgotPasswordButtonText\n  }, \"Already have an account? Sign In\")))));\n}\nvar styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    color: '#202020',\n    fontWeight: '500',\n    marginVertical: 15\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  forgotPasswordButtonText: {\n    color: 'tomato',\n    fontSize: 18,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"sources":["/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/aws_screens/SignUp.js"],"names":["React","useState","Auth","SafeAreaView","AppTextInput","AppButton","SignUp","navigation","username","setUsername","password","setPassword","email","setEmail","signUp","attributes","console","log","navigate","styles","safeAreaContainer","container","title","text","footerButtonContainer","forgotPasswordButtonText","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","color","fontWeight","marginVertical","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { Auth } from 'aws-amplify';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport AppTextInput from '../AppTextInput';\nimport AppButton from '../AppButton';\n\nexport default function SignUp({ navigation }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  async function signUp() {\n    try {\n      await Auth.signUp({ username, password, attributes: { email} });\n      console.log('<img draggable=\"false\" class=\"emoji\" alt=\"✅\" src=\"https://s.w.org/images/core/emoji/11/svg/2705.svg\"> Sign-up Confirmed');\n      navigation.navigate('ConfirmSignUp');\n    } catch (error) {\n      console.log('<img draggable=\"false\" class=\"emoji\" alt=\"❌\" src=\"https://s.w.org/images/core/emoji/11/svg/274c.svg\"> Error signing up...', error);\n    }\n  }\n  return (\n    <SafeAreaView style={styles.safeAreaContainer}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Create a new account</Text>\n        <AppTextInput\n          value={username}\n          onChangeText={text => setUsername(text)}\n          leftIcon=\"account\"\n          placeholder=\"Enter username\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n        />\n        <AppTextInput\n          value={password}\n          onChangeText={text => setPassword(text)}\n          leftIcon=\"lock\"\n          placeholder=\"Enter password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <AppTextInput\n          value={email}\n          onChangeText={text => setEmail(text)}\n          leftIcon=\"email\"\n          placeholder=\"Enter email\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n        />\n        <AppButton title=\"Sign Up\" onPress={signUp} />\n        <View style={styles.footerButtonContainer}>\n          <TouchableOpacity onPress={() => navigation.navigate('SignIn')}>\n            <Text style={styles.forgotPasswordButtonText}>\n              Already have an account? Sign In\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    color: '#202020',\n    fontWeight: '500',\n    marginVertical: 15\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  forgotPasswordButtonText: {\n    color: 'tomato',\n    fontSize: 18,\n    fontWeight: '600'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}