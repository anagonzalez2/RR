{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/App.js\",\n    _this2 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component, useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport logo from \"./assets/zl_logo.png\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nvar Root = createStackNavigator();\nimport * as SplashScreen from 'expo-splash-screen';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      appIsReady: false\n    };\n\n    _this.prepareResources = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(performAPICalls());\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(downloadAssets());\n\n            case 5:\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.warn(_context2.t0);\n\n            case 10:\n              _context2.prev = 10;\n\n              _this.setState({\n                appIsReady: true\n              }, function _callee() {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n              return _context2.finish(10);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7, 10, 13]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.warn(_context3.t0);\n\n            case 8:\n              this.prepareResources();\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.appIsReady) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Image, {\n        source: logo,\n        style: {\n          width: 205,\n          height: 159\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: '#FFFFFF',\n          fontSize: 35\n        }\n      }, \"ZON LOOPT\"), React.createElement(Text, {\n        style: {\n          color: '#FFFFFF',\n          fontSize: 20\n        }\n      }, \"Running Routes\"), React.createElement(View, {\n        style: styles.ButtonLogin\n      }, React.createElement(Button, {\n        color: \"#000000\",\n        title: \"Login\",\n        onPress: function onPress() {\n          navigation.push('Login');\n        }\n      })), React.createElement(StatusBar, {\n        style: \"auto\"\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n\nfunction performAPICalls() {\n  return _regeneratorRuntime.async(function performAPICalls$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction downloadAssets() {\n  return _regeneratorRuntime.async(function downloadAssets$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      width: 205,\n      height: 159\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#FFFFFF',\n      fontSize: 18\n    }\n  }, \"Login\"), React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(View, {\n    style: styles.ButtonLogin\n  }, React.createElement(Button, {\n    color: \"#000000\",\n    title: \"Sign in with Google\",\n    onPress: function onPress() {\n      return Auth.federatedSignIn({\n        provider: \"Google\"\n      });\n    }\n  }), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    color: \"#000000\",\n    title: \"Sign in with Facebook\",\n    onPress: function onPress() {\n      return Auth.federatedSignIn({\n        provider: \"Facebook\"\n      });\n    }\n  }), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    color: \"#000000\",\n    title: \"Launch Hosted UI\",\n    onPress: function onPress() {\n      return Auth.federatedSignIn();\n    }\n  })));\n};\n\nimport Amplify from 'aws-amplify';\nimport config from \"./aws-exports\";\nimport SignIn from \"./aws_screens/SignIn\";\nimport SignUp from \"./aws_screens/SignUp\";\nimport ConfirmSignUp from \"./aws_screens/ConfirmSignUp\";\nimport Home from \"./aws_screens/Home\";\nAmplify.configure(config);\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport { Auth } from 'aws-amplify';\nvar AuthenticationStack = createStackNavigator();\nvar AppStack = createStackNavigator();\n\nvar AuthenticationNavigator = function AuthenticationNavigator(props) {\n  return React.createElement(AuthenticationStack.Navigator, {\n    headerMode: \"none\"\n  }, React.createElement(AuthenticationStack.Screen, {\n    name: \"SignIn\"\n  }, function (screenProps) {\n    return React.createElement(SignIn, _extends({}, screenProps, {\n      updateAuthState: props.updateAuthState\n    }));\n  }), React.createElement(AuthenticationStack.Screen, {\n    name: \"SignUp\",\n    component: SignUp\n  }), React.createElement(AuthenticationStack.Screen, {\n    name: \"ConfirmSignUp\",\n    component: ConfirmSignUp\n  }));\n};\n\nvar AppNavigator = function AppNavigator(props) {\n  return React.createElement(AppStack.Navigator, null, React.createElement(AppStack.Screen, {\n    name: \"Zon Loopt Home\"\n  }, function (screenProps) {\n    return React.createElement(Home, _extends({}, screenProps, {\n      updateAuthState: props.updateAuthState\n    }));\n  }));\n};\n\nvar Initializing = function Initializing() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"tomato\"\n  }), React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      width: 205,\n      height: 159\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#FFFFFF',\n      fontSize: 18\n    }\n  }, \"ZON LOOPT\"), React.createElement(Text, {\n    style: {\n      color: '#FFFFFF',\n      fontSize: 10\n    }\n  }, \"Running Routes\"), React.createElement(StatusBar, {\n    style: \"auto\"\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  ButtonLogin: {\n    backgroundColor: '#FFFFFF',\n    borderColor: '#FFFFFF',\n    borderWidth: 5,\n    borderRadius: 8,\n    marginVertical: 45,\n    width: Dimensions.get(\"window\").width * .5,\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    padding: 1\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  text: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/App.js"],"names":["StatusBar","React","Component","useState","useEffect","logo","createStackNavigator","NavigationContainer","createBottomTabNavigator","Root","SplashScreen","App","state","appIsReady","prepareResources","performAPICalls","downloadAssets","console","warn","setState","hideAsync","preventAutoHideAsync","styles","container","width","height","color","fontSize","ButtonLogin","navigation","push","Login","route","Auth","federatedSignIn","provider","space","Amplify","config","SignIn","SignUp","ConfirmSignUp","Home","configure","withAuthenticator","AuthenticationStack","AppStack","AuthenticationNavigator","props","screenProps","updateAuthState","AppNavigator","Initializing","flex","justifyContent","alignItems","StyleSheet","create","backgroundColor","borderColor","borderWidth","borderRadius","marginVertical","Dimensions","get","display","padding","text"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component, useState, useEffect} from 'react';\nimport { Button, Image, StyleSheet, Text, View, Dimensions, ActivityIndicator} from 'react-native';\nimport logo from './assets/zl_logo.png';\n\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nconst Root = createStackNavigator()\n\nimport * as SplashScreen from 'expo-splash-screen';\n\nexport default class App extends React.Component {\n  state = {\n    appIsReady: false,\n  };\n  \n  async componentDidMount() {\n    // Prevent native splash screen from autohiding\n    try {\n      await SplashScreen.preventAutoHideAsync();\n    } catch (e) {\n      console.warn(e);\n    }\n    this.prepareResources();\n  }\n\n  /**\n   * Method that serves to load resources and make API calls\n   */\n  prepareResources = async () => {\n    try {\n      await performAPICalls();\n      await downloadAssets();\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      this.setState({ appIsReady: true }, async () => {\n        await SplashScreen.hideAsync();\n      });\n    }\n  };\n\n  render() {\n    if (!this.state.appIsReady) {\n      return null;\n    }\n\n    return (\n      <View style={styles.container}>\n          <Image source={logo} style={{ width: 205, height: 159 }} />\n          <Text style={{color: '#FFFFFF', fontSize: 35}}>\n            ZON LOOPT\n          </Text>\n          <Text style= {{color: '#FFFFFF', fontSize: 20}}>\n            Running Routes\n          </Text>\n          <View style = {styles.ButtonLogin}>\n          <Button\n            color=\"#000000\"\n            title='Login'\n            onPress={() => {navigation.push('Login')}} />\n            </View>\n          <StatusBar style=\"auto\" />\n    </View>\n    );\n  }\n}\n\n// Put any code you need to prepare your app in these functions\nasync function performAPICalls() {}\nasync function downloadAssets() {}\n\nconst Login = ({ navigation, route }) => (\n  <View style={styles.container}>\n      <Image source={logo} style={{ width: 205, height: 159 }} />\n      <Text style={{color: '#FFFFFF', fontSize: 18}}>\n        Login\n      </Text>\n      <StatusBar style=\"auto\" />\n      <View style = {styles.ButtonLogin}>\n      <Button\n        color=\"#000000\"\n        title=\"Sign in with Google\"\n        onPress={() => Auth.federatedSignIn({ provider: \"Google\" })}\n      />\n\n      <View style={styles.space} />\n      <Button\n        color=\"#000000\"\n        title=\"Sign in with Facebook\"\n        onPress={() => Auth.federatedSignIn({ provider: \"Facebook\" })}\n      />\n\n      <View style={styles.space} />\n      <Button\n        color=\"#000000\"\n        title=\"Launch Hosted UI\"\n        onPress={() => Auth.federatedSignIn()}\n      />\n      </View>\n  </View>\n)\n\n//AWS Login Screen & user authentication\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\n\nimport SignIn from './aws_screens/SignIn';\nimport SignUp from './aws_screens/SignUp';\nimport ConfirmSignUp from './aws_screens/ConfirmSignUp';\nimport Home from './aws_screens/Home';\n\nAmplify.configure(config);\n\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport { Auth } from 'aws-amplify';\n\nconst AuthenticationStack = createStackNavigator();\nconst AppStack = createStackNavigator();\n\nconst AuthenticationNavigator = props => {\n  return (\n    <AuthenticationStack.Navigator headerMode=\"none\">\n      <AuthenticationStack.Screen name=\"SignIn\">\n        {screenProps => (\n          <SignIn {...screenProps} updateAuthState={props.updateAuthState} />\n        )}\n      </AuthenticationStack.Screen>\n      <AuthenticationStack.Screen name=\"SignUp\" component={SignUp} />\n      <AuthenticationStack.Screen\n        name=\"ConfirmSignUp\"\n        component={ConfirmSignUp}\n      />\n    </AuthenticationStack.Navigator>\n  );\n};\n\nconst AppNavigator = props => {\n  return (\n    <AppStack.Navigator>\n      <AppStack.Screen name=\"Zon Loopt Home\">\n        {screenProps => (\n          <Home {...screenProps} updateAuthState={props.updateAuthState} />\n        )}\n      </AppStack.Screen>\n    </AppStack.Navigator>\n  );\n};\n\nconst Initializing = () => {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ActivityIndicator size=\"large\" color=\"tomato\" />\n      <View style={styles.container}>\n        <Image source={logo} style={{ width: 205, height: 159 }} />\n        <Text style={{color: '#FFFFFF', fontSize: 18}}>\n          ZON LOOPT\n        </Text>\n        <Text style= {{color: '#FFFFFF', fontSize: 10}}>\n          Running Routes\n        </Text>\n        <StatusBar style=\"auto\" />\n      </View>\n    </View>\n  );\n};\n\n/*\nimport landing from './pages/landing'\nimport login from './pages/login'\nimport join from './pages/join'\n\n\nimport {createStackNavigator} from 'react-navigation';\n\nconst RootStack = createStackNavigator({\n  landing: Landing,\n  login: Login,\n  join: Join,\n\n})\n*/\n\n// import Landing from './landing.js';\n// const Landing = ({ navigation, route }) => (\n//   <View style={styles.container}>\n//       <Image source={logo} style={{ width: 205, height: 159 }} />\n//       <Text style={{color: '#FFFFFF', fontSize: 35}}>\n//         ZON LOOPT\n//       </Text>\n//       <Text style= {{color: '#FFFFFF', fontSize: 20}}>\n//         Running Routes\n//       </Text>\n//       <View style = {styles.ButtonLogin}>\n//       <Button\n//         color=\"#000000\"\n//         title='Login'\n//         onPress={() => {navigation.push('Login')}} />\n//         </View>\n//       <StatusBar style=\"auto\" />\n// </View>\n// )\n\n\n// function App() {\n//   const [isUserLoggedIn, setUserLoggedIn] = useState('initializing');\n//   useEffect(() => {\n//     checkAuthState();\n//   }, []);\n//   async function checkAuthState() {\n//     try {\n//       await Auth.currentAuthenticatedUser();\n//       console.log('<img draggable=\"false\" class=\"emoji\" alt=\"✅\" src=\"https://s.w.org/images/core/emoji/11/svg/2705.svg\"> User is signed in');\n//       setUserLoggedIn('loggedIn');\n//     } catch (err) {\n//       console.log('<img draggable=\"false\" class=\"emoji\" alt=\"❌\" src=\"https://s.w.org/images/core/emoji/11/svg/274c.svg\"> User is not signed in');\n//       setUserLoggedIn('loggedOut');\n//     }\n//   }\n//   function updateAuthState(isUserLoggedIn) {\n//     setUserLoggedIn(isUserLoggedIn);\n//   }\n//\n//   // async function signOut() {\n//   //   try {\n//   //     await Auth.signOut();\n//   //   } catch (error) {\n//   //     console.log('Error signing out: ', error);\n//   //   }\n//   // }\n//\n//   return (\n//     <NavigationContainer>\n//         {isUserLoggedIn === 'initializing' && <Initializing />}\n//         {isUserLoggedIn === 'loggedIn' && (\n//           <AppNavigator updateAuthState={updateAuthState} />\n//         )}\n//         {isUserLoggedIn === 'loggedOut' && (\n//           <AuthenticationNavigator updateAuthState={updateAuthState} />\n//         )}\n//       </NavigationContainer>\n//     // <NavigationContainer>\n//     //   <Root.Navigator>\n//     //     <Root.Screen name=\"Landing\" component={Landing} />\n//     //     <Root.Screen name=\"Login\" component={Login} />\n//     //     <Root.Screen name=\"Home\" component={Home} />\n//     //   </Root.Navigator>\n//     // </NavigationContainer>\n//\n//     );\n// }\n\n//export default withAuthenticator(App);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ButtonLogin: {\n      backgroundColor: '#FFFFFF',\n      borderColor: '#FFFFFF',\n      borderWidth: 5,\n      borderRadius: 8,\n      marginVertical: 45,\n      width:Dimensions.get(\"window\").width * .5,\n      display:\"flex\",\n      justifyContent:\"space-evenly\",\n      alignItems: \"center\",\n      padding: 1,\n   },\n   space: {\n    width: 20, // or whatever size you need\n    height: 20,\n  },\n  text: {\n    color: 'white'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}