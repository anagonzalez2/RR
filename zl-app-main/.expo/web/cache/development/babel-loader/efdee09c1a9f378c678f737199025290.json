{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/aws_screens/SignIn.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Auth } from 'aws-amplify';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport AppTextInput from \"../AppTextInput\";\nimport AppButton from \"../AppButton\";\nexport default function SignIn(_ref) {\n  var navigation = _ref.navigation,\n      updateAuthState = _ref.updateAuthState;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function signIn() {\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.signIn(username, password));\n\n          case 3:\n            console.log('<img draggable=\"false\" class=\"emoji\" alt=\"✅\" src=\"https://s.w.org/images/core/emoji/11/svg/2705.svg\"> Success');\n            updateAuthState('loggedIn');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('<img draggable=\"false\" class=\"emoji\" alt=\"❌\" src=\"https://s.w.org/images/core/emoji/11/svg/274c.svg\"> Error signing in...', _context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.safeAreaContainer\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Sign in to your account\"), React.createElement(AppTextInput, {\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    leftIcon: \"account\",\n    placeholder: \"Enter username\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\"\n  }), React.createElement(AppTextInput, {\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\"\n  }), React.createElement(AppButton, {\n    title: \"Login\",\n    onPress: signIn\n  }), React.createElement(View, {\n    style: styles.footerButtonContainer\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    }\n  }, React.createElement(Text, {\n    style: styles.forgotPasswordButtonText\n  }, \"Don't have an account? Sign Up\")))));\n}\nvar styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    color: '#202020',\n    fontWeight: '500',\n    marginVertical: 15\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  forgotPasswordButtonText: {\n    color: 'tomato',\n    fontSize: 18,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"sources":["/Users/mabelsmith/Desktop/KWK/RR/zl-app-main/aws_screens/SignIn.js"],"names":["React","useState","Auth","SafeAreaView","AppTextInput","AppButton","SignIn","navigation","updateAuthState","username","setUsername","password","setPassword","signIn","console","log","styles","safeAreaContainer","container","title","text","footerButtonContainer","navigate","forgotPasswordButtonText","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","color","fontWeight","marginVertical","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { Auth } from 'aws-amplify';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport AppTextInput from '../AppTextInput';\nimport AppButton from '../AppButton';\n\nexport default function SignIn({ navigation, updateAuthState }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  async function signIn() {\n    try {\n      await Auth.signIn(username, password);\n      console.log('<img draggable=\"false\" class=\"emoji\" alt=\"✅\" src=\"https://s.w.org/images/core/emoji/11/svg/2705.svg\"> Success');\n      updateAuthState('loggedIn');\n    } catch (error) {\n      console.log('<img draggable=\"false\" class=\"emoji\" alt=\"❌\" src=\"https://s.w.org/images/core/emoji/11/svg/274c.svg\"> Error signing in...', error);\n    }\n  }\n  \n  return (\n    <SafeAreaView style={styles.safeAreaContainer}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Sign in to your account</Text>\n        <AppTextInput\n          value={username}\n          onChangeText={text => setUsername(text)}\n          leftIcon=\"account\"\n          placeholder=\"Enter username\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n        />\n        <AppTextInput\n          value={password}\n          onChangeText={text => setPassword(text)}\n          leftIcon=\"lock\"\n          placeholder=\"Enter password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <AppButton title=\"Login\" onPress={signIn} />\n        <View style={styles.footerButtonContainer}>\n          <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\n            <Text style={styles.forgotPasswordButtonText}>\n              Don't have an account? Sign Up\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    color: '#202020',\n    fontWeight: '500',\n    marginVertical: 15\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  forgotPasswordButtonText: {\n    color: 'tomato',\n    fontSize: 18,\n    fontWeight: '600'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}